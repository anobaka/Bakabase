using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Serialization;
using Bakabase.InsideWorld.Business.Components.Resource.Components.Enhancer.Infrastructures;
using Bakabase.InsideWorld.Business.Components.Resource.Nfo;
using Bakabase.InsideWorld.Business.Components.Resource.Nfo.Serializers;
using Bakabase.InsideWorld.Models.Constants;
using Bakabase.InsideWorld.Models.Models.Dtos;
using Bootstrap.Extensions;

namespace Bakabase.InsideWorld.Business.Components.Resource.Components.Enhancer
{
    [Enhancer(new object[]
        {
            ReservedResourceProperty.Tag,
            ReservedResourceProperty.Rate,
        }, null,
        Description =
            "Enable this if you want to retrieve information from local nfo files. Nfo generated by other application will not be supported for now.",
        Version = "1.0.1")]
    public class NfoEnhancer : IEnhancer
    {
        public Task<string> Validate()
        {
            return Task.FromResult((string) null);
        }

        public async Task<Enhancement[]> Enhance(Business.Models.Domain.Resource resource)
        {
            var nfoFullname = Path.Combine(resource.IsFile ? resource.Directory : resource.Path,
                ResourceNfoService.DefaultFilename);
            var nfo = await ResourceNfoService.Deserialize(nfoFullname);
            var es = new List<Enhancement>();
            if (nfo != null)
            {
                if (nfo.Tags?.Any() == true)
                {
                    es.Add(Enhancement.BuildTag(nfo.Tags));
                }

                if (nfo.Rate > 0)
                {
                    es.Add(Enhancement.BuildRate(nfo.Rate));
                }
            }

            return es.ToArray();
        }
    }
}